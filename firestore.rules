rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isUser(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    // Users Collection: Users can read/update their own profile.
    match /users/{userId} {
      allow read, update: if isUser(userId);
      allow create: if isSignedIn(); // Allow any signed-in user to create their own doc
    }

    // Products Collection: Anyone can read products. Only the artisan can create/update/delete their own.
    match /products/{productId} {
      allow read: if true; // Publicly readable
      allow create: if isSignedIn() && request.resource.data.artisanId == request.auth.uid;
      allow update, delete: if isSignedIn() && resource.data.artisanId == request.auth.uid;
      
      // Reviews subcollection: Authenticated users can create reviews. Anyone can read.
      match /reviews/{reviewId} {
        allow read: if true;
        allow create: if isSignedIn(); // Simple rule: any logged-in user can create. Could be tightened to "only buyers of this product".
      }
    }

    // Artisans Profiles Collection: Publicly readable. Only the artisan can update.
    match /artisanProfiles/{artisanId} {
      allow read: if true;
      allow create, update: if isUser(artisanId); // Only the user themselves can create/update their artisan profile
    }

    // Orders Collection: Users can create orders for themselves. Only involved parties can read.
    match /orders/{orderId} {
      allow create: if isUser(request.resource.data.userId); // A user can create an order for themselves
      allow read: if isUser(resource.data.userId) || isUser(resource.data.artisanId); // Buyer or Seller can read
      allow update: if isUser(resource.data.artisanId); // Only the artisan can update the status
    }
  }
}
